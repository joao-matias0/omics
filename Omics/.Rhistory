# Load the count table
filtered_count_table <- read.table("filtered_count_table.txt", header = TRUE, sep = "\t")
setwd("~/Desktop/MsC - Biochem & Biomed/1st Semester/Abordagens _Ã“micas_ em Biomedicina e Biotecnologia/Trabalho - Methilone_MDMA/Counts/Cut counts")
# Load the count table
filtered_count_table <- read.table("filtered_count_table.txt", header = TRUE, sep = "\t")
ibrary(dplyr)
library(dplyr)
# Load required libraries
library(org.Rn.eg.db)
BiocManager::install("EnsDb.Hsapiens.v79")
BiocManager::install("org.Rn.eg.db")
BiocManager::install("org.Rn.eg.db")
force = TRUE
library(org.Rn.eg.db)
library(dplyr)
common_names <- AnnotationDbi::mapIds(
org.Rn.eg(),
keys = count_table$Geneid,
column = "SYMBOL",
keytype = "ENSEMBL",
multiVals = "first"
)
count_table <- filtered_count_table %>%
mutate(CommonName = common_names[Geneid])
common_names <- AnnotationDbi::mapIds(
EnsDb.Hsapiens.v79,
keys = count_table$Geneid,
column = "SYMBOL",
keytype = "ENSEMBL",
multiVals = "first"
)
#Transform a .txt table into a .csv
data <- read.table("filtered_count_table.txt", header = TRUE, sep = "\t")
View(data)
file1 <- read.table("1-FC_counts.txt", header = TRUE, sep = "\t")
file2 <- read.table("2-FC_counts.txt", header = TRUE, sep = "\t")
file3 <- read.table("3-FC_counts.txt", header = TRUE, sep = "\t")
file4 <- read.table("4-FC_counts.txt", header = TRUE, sep = "\t")
file5 <- read.table("5-FC_counts.txt", header = TRUE, sep = "\t")
file6 <- read.table("6-FC_counts.txt", header = TRUE, sep = "\t")
file7 <- read.table("7-FC_counts.txt", header = TRUE, sep = "\t")
file8 <- read.table("8-FC_counts.txt", header = TRUE, sep = "\t")
file9 <- read.table("9-FC_counts.txt", header = TRUE, sep = "\t")
file10 <- read.table("10-FC_counts.txt", header = TRUE, sep = "\t")
file11 <- read.table("11-FC_counts.txt", header = TRUE, sep = "\t")
file12 <- read.table("12-FC_counts.txt", header = TRUE, sep = "\t")
file13 <- read.table("13-FC_counts.txt", header = TRUE, sep = "\t")
file14 <- read.table("14-FC_counts.txt", header = TRUE, sep = "\t")
file15 <- read.table("15-FC_counts.txt", header = TRUE, sep = "\t")
file16 <- read.table("16-FC_counts.txt", header = TRUE, sep = "\t")
file17 <- read.table("17-FC_counts.txt", header = TRUE, sep = "\t")
file18 <- read.table("18-FC_counts.txt", header = TRUE, sep = "\t")
# Create a list of all the files
file_list <- list(file1, file2, file3, file4, file5, file6, file7, file8, file9,
file10, file11, file12, file13, file14, file15, file16, file17, file18)
# Use Reduce to merge all the files by "Geneid"
count_table <- Reduce(function(x, y) merge(x, y, by = "Geneid", all = TRUE), file_list)
#Create a file
write.table(count_table, "count_table.txt", sep = "\t", row.names = FALSE, quote = FALSE)
###Removing rows where sum is 0
# Load the table
count_table <- read.table("count_table.txt", header = TRUE, sep = "\t")
# Calculate row sums excluding the first column (Geneid)
row_sums <- rowSums(count_table[ , -1])
# Filter out rows where the sum is 0
filtered_table <- count_table[row_sums != 0, ]
# Write the filtered table to a new file
write.table(filtered_table, "filtered_count_table.txt", sep = "\t", row.names = FALSE, quote = FALSE)
library(org.Rn.eg.db)
library(dplyr)
# Load the count table
filtered_count_table <- read.table("filtered_count_table.txt", header = TRUE, sep = "\t")
# Map Ensembl IDs to symbols (common names)
# The mapIds function retrieves mappings from org.Rn.eg.db
common_names <- AnnotationDbi::mapIds(
org.Rn.eg.db,
keys = count_table$Geneid,
column = "SYMBOL",
keytype = "ENSEMBL",
multiVals = "first"
)
count_table <- count_table %>%
mutate(CommonName = common_names[Geneid])
View(count_table)
# Move the original Geneid column to the last position, if needed
count_table <- count_table %>%
relocate(Geneid, .after = last_col())
# Replace Geneid column with CommonName
count_table <- count_table %>%
mutate(Geneid = CommonName) %>%
select(-CommonName)
# Write the updated table to a file
write.table(count_table, "updated_count_table_with_names.txt", sep = "\t", row.names = FALSE, quote = FALSE)
#Remove rows where GENEID is NA or empty
final_count_table <- count_table[!is.na(count_table$Geneid) & count_table$Geneid != "", ]
View(final_count_table)
write.table(final_count_table, "final_count_table.txt", sep = "\t", row.names = FALSE, quote = FALSE)
View(final_count_table)
data <- read.table("final_count_table.txt", header = TRUE, sep = "\t")
write.csv(data, "final_count_table.txt", row.names = FALSE)
View(data)
data <- read.table("final_count_table.txt", header = TRUE, sep = "\t")
write.csv(data, "final_count_table.txt", row.names = FALSE)
write.csv(data, "final_count_table.csv", row.names = FALSE)
#Script do tratamento dos nossos dados
file1 <- read.table("1-FC_counts.txt", header = TRUE, sep = "\t")
file2 <- read.table("2-FC_counts.txt", header = TRUE, sep = "\t")
file3 <- read.table("3-FC_counts.txt", header = TRUE, sep = "\t")
file4 <- read.table("4-FC_counts.txt", header = TRUE, sep = "\t")
file5 <- read.table("5-FC_counts.txt", header = TRUE, sep = "\t")
file6 <- read.table("6-FC_counts.txt", header = TRUE, sep = "\t")
file7 <- read.table("7-FC_counts.txt", header = TRUE, sep = "\t")
file8 <- read.table("8-FC_counts.txt", header = TRUE, sep = "\t")
file9 <- read.table("9-FC_counts.txt", header = TRUE, sep = "\t")
file10 <- read.table("10-FC_counts.txt", header = TRUE, sep = "\t")
file11 <- read.table("11-FC_counts.txt", header = TRUE, sep = "\t")
file12 <- read.table("12-FC_counts.txt", header = TRUE, sep = "\t")
file13 <- read.table("13-FC_counts.txt", header = TRUE, sep = "\t")
file14 <- read.table("14-FC_counts.txt", header = TRUE, sep = "\t")
file15 <- read.table("15-FC_counts.txt", header = TRUE, sep = "\t")
file16 <- read.table("16-FC_counts.txt", header = TRUE, sep = "\t")
file17 <- read.table("17-FC_counts.txt", header = TRUE, sep = "\t")
file18 <- read.table("18-FC_counts.txt", header = TRUE, sep = "\t")
# Create a list of all the files
file_list <- list(file1, file2, file3, file4, file5, file6, file7, file8, file9,
file10, file11, file12, file13, file14, file15, file16, file17, file18)
# Use Reduce to merge all the files by "Geneid"
count_table <- Reduce(function(x, y) merge(x, y, by = "Geneid", all = TRUE), file_list)
#Create a file
write.table(count_table, "count_table.txt", sep = "\t", row.names = FALSE, quote = FALSE)
###Removing rows where sum is 0
# Load the table
count_table <- read.table("count_table.txt", header = TRUE, sep = "\t")
# Calculate row sums excluding the first column (Geneid)
row_sums <- rowSums(count_table[ , -1])
# Filter out rows where the sum is 0
filtered_table <- count_table[row_sums != 0, ]
# Write the filtered table to a new file
write.table(filtered_table, "filtered_count_table.txt", sep = "\t", row.names = FALSE, quote = FALSE)
#############Repalcing Geneid with Gene Names
#Install BiocManager
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.Rn.eg.db")
# Load required libraries
library(org.Rn.eg.db)
library(dplyr)
# Load the count table
filtered_count_table <- read.table("filtered_count_table.txt", header = TRUE, sep = "\t")
# Map Ensembl IDs to symbols (common names)
# The mapIds function retrieves mappings from org.Rn.eg.db
common_names <- AnnotationDbi::mapIds(
org.Rn.eg.db,
keys = count_table$Geneid,
column = "SYMBOL",
keytype = "ENSEMBL",
multiVals = "first"
)
# Add common names as a new column
count_table <- count_table %>%
mutate(CommonName = common_names[Geneid])
# Move the original Geneid column to the last position, if needed
count_table <- count_table %>%
relocate(Geneid, .after = last_col())
# Replace Geneid column with CommonName
count_table <- count_table %>%
mutate(Geneid = CommonName) %>%
select(-CommonName)
# Write the updated table to a file
write.table(count_table, "updated_count_table_with_names.txt", sep = "\t", row.names = FALSE, quote = FALSE)
#Remove rows where GENEID is NA or empty
final_count_table <- count_table[!is.na(count_table$Geneid) & count_table$Geneid != "", ]
write.table(final_count_table, "final_count_table.txt", sep = "\t", row.names = FALSE, quote = FALSE)
View(final_count_table)
data <- read.table("final_count_table.txt", header = TRUE, sep = "\t")
write.csv(data, "final_count_table.csv", row.names = FALSE)
#Transform a .txt table into a .csv
data <- read.table("final_count_table.txt", header = TRUE, sep = "\t")
write.csv(data, "final_count_table.csv", row.names = FALSE)
library(readr)
neib <- read_csv("final_count_table.csv")
View(neib)
signeibplus=neib$Group.1[neib$z>=3.1 & neib$sign=="positive" & neib$psurvpadj<=0.05]
univgenes=neib$Group.1
library(readr)
library(readr)
neib <- read_csv("final_count_table.csv")
signeibplus=neib$Group.1[neib$z>=3.1 & neib$sign=="positive" & neib$psurvpadj<=0.05]
univgenes=neib$Group.1
#Transform a .txt table into a .csv
data <- read.table("final_count_table.txt", header = TRUE, sep = "\t")
write.csv(data, "final_count_table.txt", row.names = FALSE)
View(data)
